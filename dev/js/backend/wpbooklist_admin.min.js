/**
 * JavaScript Admin Functions - wpbooklist-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistPhpVariables );


// All functions wrapped in jQuery(document).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Makes the last active library the viewed library after page reload on the 'Edit & Delete Books' tab
	editLibReload();

	// Highlights the active tab
	wpbooklistHighlightActiveTab();

	// Only allow one localization checkbox to be checked.
	wpbooklistLocalCheckboxControl();

	// Function for enabling the 'Choose Image' button on the 'Add a Book' tab.
	wpbooklistDashboardChooseBookCoverImageButton();

	// Function for Adding a book from the 'Add a Book' tab.
	wpbooklistDashboardAddBook();

	// Function that opens the book up in Colorbox.
	wpbooklistShowBookInColorbox();

	// For clearing the 'Create a New Library' input and disabling/enabling the 'Create New Library' button.
	wpbooklistCreateNewLibraryDisableAndClear()

	// Function to create a new Library from the 'Custom Libraries & Shortcodes' Tab.
	wpbooklistCreateNewLibrary();

	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Making the last active library the viewed library after page reload on the 'Edit & Delete Books' tab
	function editLibReload() {

		// Making the last active library the viewed library after page reload.
		if ( window.location.href.includes( 'library=' ) && window.location.href.includes( 'tab=edit-books' ) && window.location.href.includes( 'WPBookList' ) ) {
			$( '#wpbooklist-editbook-select-library' ).val( window.location.href.substr( window.location.href.lastIndexOf( '=' ) + 1 ) );
			$( '#wpbooklist-editbook-select-library' ).trigger( 'change' );
		}
	}

	function wpbooklistHighlightActiveTab() {

		// Highlight active tab
		if ( window.location.href.includes( '&tab=' ) ) {
			$( '.nav-tab' ).each( function() {
				if ( window.location.href == wpbooklistPhpVariables.FOR_TAB_HIGHLIGHT + $( this ).attr( 'href' ) ) {
					$( this ).first().css({'background-color': '#F05A1A', 'color': 'white'});
				}
			});
		} else {
			$( '.nav-tab' ).first().css({'background-color': '#F05A1A', 'color': 'white'});
		}
	}

	// Only allow one localization checkbox to be checked.
	function wpbooklistLocalCheckboxControl() {

		// Only allow one localization checkbox to be checked.
		$( '.wpbooklist-localization-checkbox' ).change( function() {
			$( '[name=us-based-book-info]' ).attr( 'checked', false );
			$( '[name=uk-based-book-info]' ).attr( 'checked', false );
			$( '[name=au-based-book-info]' ).attr( 'checked', false );
			$( '[name=br-based-book-info]' ).attr( 'checked', false );
			$( '[name=ca-based-book-info]' ).attr( 'checked', false );
			$( '[name=cn-based-book-info]' ).attr( 'checked', false );
			$( '[name=fr-based-book-info]' ).attr( 'checked', false );
			$( '[name=de-based-book-info]' ).attr( 'checked', false );
			$( '[name=in-based-book-info]' ).attr( 'checked', false );
			$( '[name=it-based-book-info]' ).attr( 'checked', false );
			$( '[name=jp-based-book-info]' ).attr( 'checked', false );
			$( '[name=mx-based-book-info]' ).attr( 'checked', false );
			$( '[name=es-based-book-info]' ).attr( 'checked', false );
			$( '[name=nl-based-book-info]' ).attr( 'checked', false );
			$( '[name=sg-based-book-info]' ).attr( 'checked', false );
			$( this ).attr( 'checked', true );
		});
	}

	// Handles the enabling/disabling of the 'Create a Library' button and input placeholder text
	function wpbooklistEnableDisableLibraryCreation() {

		// Handles the enabling/disabling of the 'Create a Library' button and input placeholder text
		$( '.wpbooklist-dynamic-input' ).on( 'click', function() {
			var currentVal = $( '.wpbooklist-dynamic-input' ).val();
			if ( 'Create a New Library Here...' == currentVal ) {
				$( '.wpbooklist-dynamic-input' ).val( '' );
			}
		});
		$( '.wpbooklist-dynamic-input' ).bind( 'input', function() {
			var currentVal = $( '.wpbooklist-dynamic-input' ).val();
			if ( ( 0 < currentVal.length ) && ( wpbooklistPhpVariables.trans54 + '...' != currentVal ) ) {
				$( '#wpbooklist-dynamic-shortcode-button' ).attr( 'disabled', false );
			}
		});
	}

	// Function for enabling the 'Choose Image' button on the 'Add a Book' tab.
	function wpbooklistDashboardChooseBookCoverImageButton() {

		// For the book cover image upload
		var fileFrame;
		if ( undefined !== wp && undefined !== wp.media ) {
			var wp_media_post_id = wp.media.model.settings.post.id; // Store the old id
			var set_to_post_id = wpbooklistPhpVariables.SAVED_ATTACHEMENT_ID; // Set this
			jQuery('#wpbooklist-addbook-upload_image_button, #wpbooklist-storefront-img-button-1, #wpbooklist-storefront-img-button-2, #wpbooklist-branding-img-button-1, #wpbooklist-branding-img-button-2').on('click', function( event ){
			var buttonid = $(this).attr('id');
			$(this).attr('data-active', true);
			console.log(buttonid);
			event.preventDefault();
			// If the media frame already exists, reopen it.
			if ( fileFrame ) {
				// Set the post ID to what we want
				fileFrame.uploader.uploader.param( 'post_id', set_to_post_id );
				// Open frame
				fileFrame.open();
				return;
			} else {
				// Set the wp.media post id so the uploader grabs the ID we want when initialised
				wp.media.model.settings.post.id = set_to_post_id;
			}
			// Create the media frame.
			fileFrame = wp.media.frames.fileFrame = wp.media({
				title: 'Select a image to upload',
				button: {
				text: 'Use this image',
				},
				multiple: false // Set to true to allow multiple files to be selected
			});
			console.log(buttonid);
			// When an image is selected, run a callback.
			fileFrame.on( 'select', function() {
				// We set multiple to false so only get one image from the uploader
				var attachment = fileFrame.state().get('selection').first().toJSON();
				// Do something with attachment.id and/or attachment.url here

				// Add preview image to dom
				if($('#wpbooklist-addbook-upload_image_button').attr('data-active') == 'true'){
					$( '#wpbooklist-addbook-image' ).val(attachment.url);
					$( '#wpbooklist-addbook-preview-img' ).attr('src', attachment.url);
					$('#wpbooklist-addbook-preview-img').attr('data-active', false);
				}

				// Add preview image to dom for branding extension
				if($('#wpbooklist-branding-img-button-1').attr('data-active') == 'true'){
					$( '#wpbooklist-branding-image-url-1' ).val(attachment.url);
					$( '#wpbooklist-branding-preview-img-1' ).attr('src', attachment.url);
					$('#wpbooklist-branding-img-button-1').attr('data-active', false);
				}

				// Add second preview image to dom for branding extension
				if($('#wpbooklist-branding-img-button-2').attr('data-active') == 'true'){
					$( '#wpbooklist-branding-image-url-2' ).val(attachment.url);
					$( '#wpbooklist-branding-preview-img-2' ).attr('src', attachment.url);
					$('#wpbooklist-branding-img-button-2').attr('data-active', false);
				}


				// Add preview image to dom for storefront extension
				if($('#wpbooklist-storefront-img-button-1').attr('data-active') == 'true'){
					$( '#wpbooklist-branding-image-url-2' ).val(attachment.url);
					$( '#wpbooklist-storefront-preview-img-1' ).attr('src', attachment.url);
					$('#wpbooklist-storefront-img-button-1').attr('data-active', false);
				}

				// Add second preview image to dom for storefront extension
				if($('#wpbooklist-storefront-img-button-2').attr('data-active') == 'true'){
					$( '#wpbooklist-storefront-preview-img-2' ).attr('src', attachment.url);
					$('#wpbooklist-storefront-img-button-2').attr('data-active', false);
				}

				// Restore the main post ID
				wp.media.model.settings.post.id = wp_media_post_id;
			});
				// Finally, open the modal
				fileFrame.open();
			});
			// Restore the main ID when the add media button is pressed
			jQuery( 'a.add_media' ).on( 'click', function() {
				wp.media.model.settings.post.id = wp_media_post_id;
			});

		}

	}

	// Function for Adding a book from the 'Add a Book' tab.
	function wpbooklistDashboardAddBook() {

		// When the Add A Book form submits
	  	$("#wpbooklist-admin-addbook-button").click(function(event){
	  		var successDiv = $('#wpbooklist-addbook-success-div');
	  		successDiv.html('');
	  		$('#wpbooklist-addbook-signed-first-table').animate({'margin-bottom':'40px'}, 500);
			$('#wpbooklist-success-view-post').animate({'opacity':'0'}, 500);

	  		event.preventDefault(event);
    		wpbooklist_add_book_validator();
    		var error = $('#wpbooklist-add-book-error-check').attr('data-add-book-form-error');

    		var woocommerce = false;
    		var woofile = '';
    		var amazonAuthYes = $( "input[name='authorize-amazon-yes']" ).prop('checked');
			var library = $('#wpbooklist-addbook-select-library').val();
			var useAmazonYes = $("input[name='use-amazon-yes']").prop('checked');
			var isbn = $( "input[name='book-isbn']" ).val();
			var title = $( "input[name='book-title']" ).val();
			var author = $( "input[name='book-author']" ).val();
			var authorUrl = $( "input[name='book-sale-author-link']" ).val();
			var category = $( "input[name='book-category']" ).val();
			var price = $( "input[name='book-price']" ).val();
			var pages = $( "input[name='book-pages']" ).val();
			var pubYear = $( "input[name='book-pubdate']" ).val();
			var publisher = $( "input[name='book-publisher']" ).val();
			var description = $( "textarea[name='book-description']" ).val();
			var subject = $( "input[name='book-subject']" ).val();
			var country = $( "input[name='book-country']" ).val();
			var notes = $( "textarea[name='book-notes']" ).val();
			var rating = $('#wpbooklist-addbook-rating').val();
			var image = $("input[name='book-image']").val();
			var finished = $("input[name='book-finished-yes']").prop('checked');
			var dateFinished = $("input[name='book-date-finished-text']").val();
			var signed = $("input[name='book-signed-yes']").prop('checked');
			var firstEdition = $("input[name='book-firstedition-yes']").prop('checked');
			var pageYes = $("input[name='book-indiv-page-yes']").prop('checked');
			var postYes = $("input[name='book-indiv-post-yes']").prop('checked');
			var swapYes = $("input[name='book-bookswapper-yes']").prop('checked');
			var copies = $("input[name='book-lend-copies']").val();
			var woocommerce = $("input[name='book-woocommerce-yes']").prop('checked');
			var salePrice = $( "input[name='book-woo-sale-price']" ).val();
			var regularPrice = $( "input[name='book-woo-regular-price']" ).val();
			var stock = $( "input[name='book-woo-stock']" ).val();
			var length = $( "input[name='book-woo-length']" ).val();
			var width = $( "input[name='book-woo-width']" ).val();
			var height = $( "input[name='book-woo-height']" ).val();
			var weight = $( "input[name='book-woo-weight']" ).val();
			var sku = $("#wpbooklist-addbook-woo-sku" ).val();
			var virtual = $("input[name='wpbooklist-woocommerce-vert-yes']").prop('checked');
			var download = $("input[name='wpbooklist-woocommerce-download-yes']").prop('checked');
			var woofile = $('#wpbooklist-storefront-preview-img-1').attr('data-id');
			var salebegin = $('#wpbooklist-addbook-woo-salebegin').val();
			var saleend = $('#wpbooklist-addbook-woo-saleend').val();
			var purchasenote = $('#wpbooklist-addbook-woo-note').val();
			var productcategory = $('#wpbooklist-woocommerce-category-select').val();
			var reviews = $('#wpbooklist-woocommerce-review-yes').prop('checked');
			var upsells = $('#select2-upsells').val();
			var crosssells = $('#select2-crosssells').val();

			var upsellString = '';
			var crosssellString = '';

			// Making checks to see if Storefront extension is active
			if(upsells != undefined){
				for (var i = 0; i < upsells.length; i++) {
					upsellString = upsellString+','+upsells[i];
				};
			}

			if(crosssells != undefined){
				for (var i = 0; i < crosssells.length; i++) {
					crosssellString = crosssellString+','+crosssells[i];
				};
			}

			if(salebegin != undefined && saleend != undefined){
				// Flipping the sale date start
				if(salebegin.indexOf('-')){
					var finishedtemp = salebegin.split('-');
					salebegin = finishedtemp[0]+'-'+finishedtemp[1]+'-'+finishedtemp[2]
				}

				// Flipping the sale date end
				if(saleend.indexOf('-')){
					var finishedtemp = saleend.split('-');
					saleend = finishedtemp[0]+'-'+finishedtemp[1]+'-'+finishedtemp[2]
				}	
			}


			// Flipping the date
			if(dateFinished.indexOf('-')){
				var finishedtemp = dateFinished.split('-');
				dateFinished = finishedtemp[1]+'-'+finishedtemp[2]+'-'+finishedtemp[0]
			}

			

    		if(error === 'false'){
    			// Show working spinner
    			$('#wpbooklist-spinner-1').animate({'opacity':'1'}, 500);
    			
	    		var data = {
					'action': 'wpbooklist_dashboard_add_book_action',
					'security': wpbooklistPhpVariables.adminnonce2,
					'amazonAuthYes':amazonAuthYes,
					'library':library,
					'useAmazonYes':useAmazonYes,
					'isbn':isbn,
					'title':title,
					'author':author,
					'authorUrl':authorUrl,
					'category':category,
					'price':price,
					'pages':pages,
					'pubYear':pubYear,
					'publisher':publisher,
					'description':description,
					'subject':subject,
					'country':country,
					'notes':notes,
					'rating':rating,
					'image':image,
					'finished':finished,
					'dateFinished':dateFinished,
					'signed':signed,
					'firstEdition':firstEdition,
					'pageYes':pageYes,
					'postYes':postYes,
					'swapYes':swapYes,
					'copies':copies,
					'woocommerce':woocommerce,
					'saleprice':salePrice,
					'regularprice':regularPrice,
					'stock':stock,
					'length':length,
					'width':width,
					'height':height,
					'weight':weight,
					'sku':sku,
					'virtual':virtual,
					'download':download,
					'woofile':woofile,
					'salebegin':salebegin,
					'saleend':saleend,
					'purchasenote':purchasenote,
					'productcategory':productcategory,
					'reviews':reviews,
					'upsells':upsellString,
					'crosssells':crosssellString
				};
				console.log("Here's the data that is being sent to the server to add a book:")
				console.log(data)

		     	var request = $.ajax({
				    url: ajaxurl,
				    type: "POST",
				    data:data,
				    timeout: 0,
				    success: function(response) {

				    	// Split up the reponse, set up some variables based on reposne, display messages to user

				    	response = response.split('--sep--');
				    	console.log(response);
				    	if(response[0] == 1){

				    		var apicallreport = response[7];
					    	var whichapifound = JSON.parse(response[8]);
					    	var amazonapifailcount = response[9];

					    	console.log(apicallreport)
					    	console.log("Here's the report for where the this book's data was obtained from:");
					    	console.log(whichapifound)
					    	console.log('The Amazon Fail Count was: '+amazonapifailcount);

				    		 

				    		if(useAmazonYes){
				    			if(amazonapifailcount == 2 || amazonapifailcount == '2'){
				    				var addBookSuccess1 = "<p><span id='wpbooklist-add-book-success-span'>" + wpbooklistPhpVariables.trans49 + "</span><br/> " + wpbooklistPhpVariables.trans50 + "<em> " + wpbooklistPhpVariables.trans51 + " </em>" + wpbooklistPhpVariables.trans52;
					    		} else {
					    			var addBookSuccess1 = "<p><span id='wpbooklist-add-book-success-span'>" + wpbooklistPhpVariables.trans38 + "</span><br/> " + wpbooklistPhpVariables.trans39 + " <span id='wpbooklist-addbook-success-shortcode'>";
					    		}
				    		} else {
				    			var addBookSuccess1 = "<p><span id='wpbooklist-add-book-success-span'>" + wpbooklistPhpVariables.trans38 + "</span><br/> " + wpbooklistPhpVariables.trans39 + " <span id='wpbooklist-addbook-success-shortcode'>"; 
				    		}

				    		

				    		if(library.includes('wpbooklist_jre_saved_book_log')){
				    			var shortcode = '[wpbooklist_shortcode]'
				    		} else {
				    			library = library.split('_');
				    			library = library[library.length-1];
				    			var shortcode = '[wpbooklist_shortcode table="'+library+'"]'
				    		}

				    		if(useAmazonYes){
				    			if(amazonapifailcount == 2 || amazonapifailcount == '2'){
				    				var addBookSuccess2 = '</span></p><a id="wpbooklist-success-1" class="wpbooklist-show-book-colorbox">' + wpbooklistPhpVariables.trans40 + '</a>';
					    		} else {
					    			var addBookSuccess2 = shortcode+'</span></p><a id="wpbooklist-success-1" class="wpbooklist-show-book-colorbox">' + wpbooklistPhpVariables.trans40 + '</a>';
					    		}
				    		} else {
				    			var addBookSuccess2 = shortcode+'</span></p><a id="wpbooklist-success-1" class="wpbooklist-show-book-colorbox">' + wpbooklistPhpVariables.trans40 + '</a>';
				    		}
				    		
				    		

				    		var addBookSuccess3 = '';

				    		// If book addition was succesful and user chose to create a post
				    		if(response[4] == 'true' && response[3] == 'false'){
				    			var addBookSuccess3 = "<p id='wpbooklist-addbook-success-post-p'><a href='"+response[6]+"'>" + wpbooklistPhpVariables.trans41 + "</a></p></div>";
				    			$('#wpbooklist-addbook-signed-first-table').animate({'margin-bottom':'70px'}, 500);
				    			$('#wpbooklist-success-view-post').animate({'opacity':'1'}, 500);
				    		} 

				    		// If book addition was succesful and user chose to create a page
				    		if(response[3] == 'true' && response[4] == 'false'){
				    			var addBookSuccess3 = "<p id='wpbooklist-addbook-success-page-p'><a href='"+response[5]+"'>" + wpbooklistPhpVariables.trans42 + "</a></p></div>";
				    			$('#wpbooklist-addbook-signed-first-table').animate({'margin-bottom':'70px'}, 500);
				    			$('#wpbooklist-success-view-page').animate({'opacity':'1'}, 500);
				    		} 

				    		// If book addition was succesful and user chose to create a post and a page
				    		if(response[3] == 'true' && response[4] == 'true'){
				    			var addBookSuccess3 = "<p id='wpbooklist-addbook-success-page-p'><a href='"+response[5]+"'>" + wpbooklistPhpVariables.trans42 + "</a></p><p id='wpbooklist-addbook-success-post-p'><a href='"+response[6]+"'>" + wpbooklistPhpVariables.trans41 + "</a></p></div>";
				    			$('#wpbooklist-addbook-signed-first-table').animate({'margin-bottom':'100px'}, 500);
				    			$('#wpbooklist-success-view-page').animate({'opacity':'1'}, 500);
				    			$('#wpbooklist-success-view-post').animate({'opacity':'1'}, 500);
				    		} 

				    		// Add response message to DOM
				    		var endMessage = '<div id="wpbooklist-addbook-success-thanks">' + wpbooklistPhpVariables.trans43 + '<a href="http://wpbooklist.com/index.php/extensions/">&nbsp;' + wpbooklistPhpVariables.trans44 + '</a><br/><br/>' + wpbooklistPhpVariables.trans45 + ' <a id="wpbooklist-addbook-success-review-link" href="https://wordpress.org/support/plugin/wpbooklist/reviews/?filter=5" >' + wpbooklistPhpVariables.trans46 + '</a><img id="wpbooklist-smile-icon-1" src="' + wpbooklistPhpVariables.ROOT_IMG_ICONS_URL + 'smile.png"></div>';
				    		successDiv.html(addBookSuccess1+addBookSuccess2+addBookSuccess3+endMessage);

				    		$('#wpbooklist-spinner-1').animate({'opacity':'0'}, 500);
				    		$('#wpbooklist-success-1').animate({'opacity':'1'}, 500);
				    		$('#wpbooklist-success-1').attr('data-bookid', response[1]);
				    		$('#wpbooklist-success-1').attr('data-booktable', response[2]);
				    	} else {
				    		$('#wpbooklist-addbook-signed-first-table').animate({'margin-bottom':'65px'}, 500);
				    		successDiv.html(wpbooklistPhpVariables.trans47 + ' <a href="mailto:techsupport@wpbooklist.com">' + wpbooklistPhpVariables.trans48 + '</a><br/><br/>'+response[1]);
				    		$('#wpbooklist-spinner-1').animate({'opacity':'0'}, 500);
				    		$('#wpbooklist-success-1').animate({'opacity':'1'}, 500);
				    	}
				    },
					error: function(jqXHR, textStatus, errorThrown) {
						$('#wpbooklist-success-1').html(wpbooklistPhpVariables.trans47);
			    		$('#wpbooklist-spinner-1').animate({'opacity':'0'}, 500);
			    		$('#wpbooklist-success-1').animate({'opacity':'1'}, 500);
						console.log(errorThrown);
			            console.log(textStatus);
			            console.log(jqXHR);
			            // TODO: Log the console errors here
					}
				});
	     	}

	     	event.preventDefault ? event.preventDefault() : event.returnValue = false;

	     });

	}


	// Function that opens the book up in Colorbox.
	function wpbooklistShowBookInColorbox(){
		$(document).on("click",".wpbooklist-show-book-colorbox", function(event){
			event.preventDefault ? event.preventDefault() : event.returnValue = false;
	  		var bookId = $(this).attr('data-bookid');
	  		var bookTable = $(this).attr('data-booktable');

	  		var brandingtext1 = $('#wpbooklist-branding-text-1').attr('data-value');
	  		if(brandingtext1 == undefined){
	  			brandingtext1 = '';
	  		}
	  		var brandingtext2 = $('#wpbooklist-branding-text-2').attr('data-value');
	  		if(brandingtext2 == undefined){
	  			brandingtext2 = '';
	  		}
	  		var brandinglogo1 = $('#wpbooklist-branding-logo-1').attr('data-value');
	  		if(brandinglogo1 == undefined){
	  			brandinglogo1 = '';
	  		}
	  		var brandinglogo2 = $('#wpbooklist-branding-logo-2').attr('data-value');
	  		if(brandinglogo2 == undefined){
	  			brandinglogo2 = '';
	  		}

	  		// The variable to tell colorbox whether this string exists in the url: sortby=alphabeticallybyauthorlast, and if so, to swap around the Author names. 
	  		var sortParam = '';
	  		var url = window.location.href;
	  		if(url.indexOf('sortby=alphabeticallybyauthorlast') > -1){
	  			sortParam = 'true';
	  		}

		  	var data = {
				'action': 'wpbooklist_show_book_in_colorbox_action',
				'security': wpbooklistPhpVariables.adminnonce3,
				'bookId':bookId,
				'bookTable':bookTable,
				'sortParam':sortParam
			};
			console.log(data);

			$.colorbox({
		        iframe:true,
		        title: wpbooklistPhpVariables.trans55, 
		        width: "50%", 
		        height: "80%", 
		        html: "&nbsp;", 
		        fastIframe:false,
		        onComplete:function(){
		        	if(brandinglogo1 != ''){
		        		$('#wpbooklist-branding-img-1-id').remove();
		        		$('#cboxLoadingGraphic').css({'background':'none'})
		        		$('#cboxLoadingGraphic').append('<img style="margin-left: auto;margin-right: auto;display: block;width: 20%;margin-top: 15%;" id="wpbooklist-branding-img-1-id" src="'+brandinglogo1+'" />')
		        		
		        	}

		        	if(brandingtext1 != ''){
		        		$('#wpbooklist-branding-text-1-id').remove();
		        		$('#cboxLoadingGraphic').css({'background':'none'})
		        		$('#cboxLoadingGraphic').append('<p style="text-align: center;font-style: italic;font-size: 17px;font-weight: bold;" id="wpbooklist-branding-text-1-id">'+brandingtext1+'</p>')
		        	}

		        	$('#cboxLoadingGraphic').show();
		            $('#cboxLoadingGraphic').css({'display':'block'})
		        }
		    });

	     	var request = $.ajax({
			    url: ajaxurl,
			    type: "POST",
			    data:data,
			    timeout: 0,
			    success: function(response) {

			    	response = response.split('---sep---');
			    	console.log(response[1]);
			    	
			    	$.colorbox({
						open: true,
						preloading: true,
						scrolling: true,
						width:'70%',
						height:'70%',
						html: response[0],
						onClosed:function(){
						  //Do something on close.
						},
						onComplete:function(){

							if(brandinglogo2 != '' && brandingtext2 == ''){
								$('#cboxTitle').css({'border':'solid 1px #e1e1e1','height':'100px','background-color':'white', 'bottom':'-95px'})
								$('#cboxWrapper').css({'overflow':'visible'})
								$('#colorbox').css({'height':($('#colorbox').height()+100)+'px'})
								$('#cboxTitle').append('<img id="wpbooklist-branding-logo-2-id" style="width:50px; margin-top:20px;" src="'+brandinglogo2+'" />')
							}

							if(brandingtext2 != '' && brandinglogo2 == ''){
								$('#cboxTitle').css({'border':'solid 1px #e1e1e1','height':'100px','background-color':'white', 'bottom':'-95px'})
								$('#cboxWrapper').css({'overflow':'visible'})
								$('#colorbox').css({'height':($('#colorbox').height()+100)+'px'})
								$('#cboxTitle').append('<p style="text-align: center;font-style: italic;font-size: 17px;font-weight: bold;" id="wpbooklist-branding-text-2-id">'+brandingtext2+'</p>')
							}

							if(brandingtext2 != '' && brandinglogo2 != ''){
								$('#cboxTitle').css({'border':'solid 1px #e1e1e1','height':'100px','background-color':'white', 'bottom':'-95px'})
								$('#cboxWrapper').css({'overflow':'visible'})
								$('#colorbox').css({'height':($('#colorbox').height()+100)+'px'})
								$('#cboxTitle').append('<img id="wpbooklist-branding-logo-2-id" style="display:inline-block; margin-right:10px; margin-top:20px; width:50px;" src="'+brandinglogo2+'" /><p style="display:inline-block; text-align: center; margin: 0; bottom: 20px; position: relative; font-style: italic;font-size: 17px;font-weight: bold;" id="wpbooklist-branding-text-2-id">'+brandingtext2+'</p>')
							}

							
							// Hide blank 'Similar Titles' images
							$('.wpbooklist-similar-image').load(function() {
								var image = new Image();
								image.src = $(this).attr("src");
								if(image.naturalHeight == '1'){
									$(this).parent().parent().css({'display':'none'})
								}
							});

							// For the Google Preview in the Google Preview Extension
							function alertInitialized() {
							  //alert("book successfully loaded and initialized!");
							  $('#google-preview-no-results-div').css({'display':'none'})
							  $('#wpbooklist-google-title-id').css({'display':'block'})
							  $('.wpbooklist_google_p_class').css({'display':'block'})
							}

							// For the Google Preview in the Google Preview Extension
							if($('#google-preview-div').length > 0){
								//$('#wpbooklist-google-title-id').css({'display':'none'})
								$('.wpbooklist_google_p_class').css({'display':'none'})
								var viewerDiv = document.getElementById("google-preview-div");
								bookViewer = new google.books.DefaultViewer(viewerDiv);
								var test = bookViewer.load(response[1], null, alertInitialized);
							}


							addthis.toolbox(
				              $(".addthis_sharing_toolbox").get()
				            );
				            addthis.toolbox(
				              $(".addthis_sharing_toolbox").get()
				            );
				            addthis.counter(
				              $(".addthis_counter").get()
				            );
						}
					});


			    },
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
		            console.log(textStatus);
		            console.log(jqXHR);
				}
			});
	  	});
	}

	// For clearing the 'Create a New Library' input and disabling/enabling the 'Create New Library' button.
	function wpbooklistCreateNewLibraryDisableAndClear(){
		// Handles the enabling/disabling of the 'Create a Library' button and input placeholder text
		$(".wpbooklist-dynamic-input").on('click', function() { 
			console.log('fdjhsfhdjs')
			var currentVal = $(".wpbooklist-dynamic-input").val();
			console.log(currentVal)
			console.log(wpbooklistPhpVariables.trans54)
			if(currentVal == wpbooklistPhpVariables.trans54 + '...'){
			  $(".wpbooklist-dynamic-input").val('');
			}
		});
		$(".wpbooklist-dynamic-input").bind('input', function() { 
			var currentVal = $(".wpbooklist-dynamic-input").val();
			if((currentVal.length > 0) && (currentVal != wpbooklistPhpVariables.trans54 + '...')){
			  $("#wpbooklist-dynamic-shortcode-button").attr('disabled', false);
			}
		});
	}

	// Function to create a new Library from the 'Custom Libraries & Shortcodes' Tab.
	function wpbooklistCreateNewLibrary(){
 		$("#wpbooklist-dynamic-shortcode-button").click(function(event){
		      var currentVal;
		      currentVal = ($("#wpbooklist-dynamic-input-library").val()).toLowerCase();
		      var data = {
		        'action': 'wpbooklist_new_library_action',
		        'currentval': currentVal,
		        'security': wpbooklistPhpVariables.adminnonce4
		      };

		      $.post(ajaxurl, data, function(response) {
		        document.location.reload(true);
		      });
		});
	}



});
